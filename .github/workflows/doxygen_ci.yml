name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: false
        fetch-depth: 0

    - name: Update submodule (only doxygen-awesome-css)
      run: git submodule update --init docs/doxygen-awesome-css

    - name: Doxygen Action
      uses: mattnotmitt/doxygen-action@v1.1.0
      with:
        # Path to Doxyfile
        doxyfile-path: ".vscode/.doxygen/meshx.doxyconfig.ini" # default is ./Doxyfile
        # Working directory
        working-directory: "." # default is .

    - name: Generate Doxygen Docs
      uses: mattnotmitt/doxygen-action@v1.1.0
      with:
        doxyfile-path: ".vscode/.doxygen/meshx.doxyconfig.ini"
        working-directory: "."

    - name: Verify index.html exists
      run: test -f ./docs/doxygen/html/index.html

    - name: Upload generated docs
      uses: actions/upload-artifact@v4
      with:
        name: docs-html
        path: ./docs/doxygen/html

  deploy:
    permissions:
      contents: write
      pull-requests: write
      pages: write

    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download generated docs
      uses: actions/download-artifact@v4
      with:
        name: docs-html
        path: public
    - name: Verify Downloaded docs
      run: test -f ./public/index.html

    - name: Set deployment folder
      id: vars
      run: |
        if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
          echo "dir=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
        elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
          echo "dir=main" >> $GITHUB_OUTPUT
        elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
          echo "dir=dev" >> $GITHUB_OUTPUT
        fi
    - name: Pull latest gh-pages
      run: |
        git fetch origin gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages
        git reset --hard origin/gh-pages

    - name: Deploy index.html
      if: steps.vars.outputs.dir == 'main'
      run: |
        ln -sf main/index.html public/index.html

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./public
        destination_dir: ${{ steps.vars.outputs.dir }}
        force: true


